// Copyright 2018 REMME
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ------------------------------------------------------------------------

syntax = "proto3";

message ConsensusMessagePayload {
    // period of consensus loop
    uint64 period = 1;
    // header_signature of block that was proposal
    bytes proposal_id = 2;
    // public_key of node in hex format that propose this header_signature
    bytes voter_id = 3;
}

message ConsensusMessage {
    // All kind of consensus messages
    enum Type {
        VALUE_PROPOSAL = 0;
        SOFT_VOTE = 1;
        CERT_VOTE = 2;
        NEXT_VOTE = 3;
    }
    // type of consensus message
    Type type = 1;
    // payload of message
    ConsensusMessagePayload payload = 2;
}

message SignedConsensusMessage {
    bytes message_signature = 1;
    ConsensusMessage message = 2;
}

message ConsensusSeal {
    repeated SignedConsensusMessage previous_cert_votes = 1;
}

message ConsensusSealRequest {
    bytes block_id = 1;
}

message ConsensusCatchUpMessage {
    repeated bytes block_in_progress = 1;
    repeated SignedConsensusMessage message_log = 2;
}
